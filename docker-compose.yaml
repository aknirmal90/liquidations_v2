---
version: '3.4'

services:
    postgres:
        image: postgres:14
        ports:
            - 5432:5432
        environment:
            POSTGRES_PASSWORD: postgres  # Make sure to set this
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
            retries: 15
            start_period: 2s
        volumes:
            - postgres_data:/var/lib/postgresql/data
        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 1000M

    redis:
        image: redis:7.0
        ports:
            - 6379:6379
        healthcheck:
            test: ["CMD-SHELL", "redis-cli --raw ping"]
            retries: 15
            start_period: 2s
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 512M

    django:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile
            args:
                - DOPPLER_TOKEN=$DOPPLER_TOKEN
        ports:
            - 8000:8000
        command: /start-webserver-local
        environment:
            DOPPLER_TOKEN: $DOPPLER_TOKEN
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
            retries: 15
            start_period: 2s
        depends_on:
            redis:
                condition: service_healthy
            postgres:
                condition: service_healthy
        volumes:
            - .:/code
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 500M
        stdin_open: true
        tty: true

    websocket-transactions:
        restart: always
        build:
            context: .
            dockerfile: Dockerfile
            args:
                - DOPPLER_TOKEN=$DOPPLER_TOKEN
        command: /start-websocket-transactions arbitrum infura
        environment:
            DOPPLER_TOKEN: $DOPPLER_TOKEN
        depends_on:
            redis:
                condition: service_healthy
            postgres:
                condition: service_healthy
        volumes:
            - .:/code
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 500M

    # sequencer:
    #     restart: always
    #     build:
    #         context: .
    #         dockerfile: Dockerfile
    #         args:
    #             - DOPPLER_TOKEN=$DOPPLER_TOKEN
    #     command: /start-sequencer arbitrum sequencer_oregon
    #     environment:
    #         DOPPLER_TOKEN: $DOPPLER_TOKEN
    #     depends_on:
    #         redis:
    #             condition: service_healthy
    #         postgres:
    #             condition: service_healthy
    #     volumes:
    #         - .:/code
    #     deploy:
    #         resources:
    #             limits:
    #                 cpus: '0.5'
    #                 memory: 500M

    celeryworker-default:
        build:
            context: .
            dockerfile: Dockerfile
            cache_from:
                - aknirmal90/liquidations_v2
            args:
                - DOPPLER_TOKEN=$DOPPLER_TOKEN
        command: /start-celery-default
        environment:
            DOPPLER_TOKEN: $DOPPLER_TOKEN
        depends_on:
            redis:
                condition: service_healthy
        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 2G

    celeryworker-prices:
        build:
            context: .
            dockerfile: Dockerfile
            cache_from:
                - aknirmal90/liquidations_v2
            args:
                - DOPPLER_TOKEN=$DOPPLER_TOKEN
        command: /start-celery-prices
        environment:
            DOPPLER_TOKEN: $DOPPLER_TOKEN
        depends_on:
            redis:
                condition: service_healthy
        deploy:
            resources:
                limits:
                    cpus: '4'
                    memory: 2G

    celerybeat-default:
        build:
            context: .
            dockerfile: Dockerfile
            cache_from:
                - aknirmal90/liquidations_v2
            args:
                - DOPPLER_TOKEN=$DOPPLER_TOKEN
        command: /start-celery-beat
        environment:
            DOPPLER_TOKEN: $DOPPLER_TOKEN
        depends_on:
            django:
                condition: service_healthy

    # flower:
    #     image: mher/flower:1.2.0
    #     depends_on:
    #         redis:
    #             condition: service_healthy
    #         postgres:
    #             condition: service_healthy
    #     ports:
    #         - 5555:5555
    #     environment:
    #         CELERY_BROKER_URL: redis://redis:6379/1
    #         FLOWER_PORT: 5555
    #     deploy:
    #         resources:
    #             limits:
    #                 cpus: '0.25'
    #                 memory: 256M

volumes:
    postgres_data:
        driver: local
